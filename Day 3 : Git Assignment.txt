## GIT ASSIGNMENT

2.Create a new repository on local in an empty directory (NOTE: do not clone)
Ques: What changes did you observe in the current directory after initializing local repo? 
    A .git folder is made

3. Point remote of your local git repo to the newly created repo on Gitlab 
    git remote -v
    git remote add origin https://gitlab.com/rahil_1407/i-am-a-git-noob.git


4. Print current git configs on terminal
    git config --global user.name
    git config --global user.email

5.Update git config with your name and email address (only for current repository)
    git config --local user.name "rahil-sinha"
    git config --local user.email "rsinha@deqode.com"

6. Create a file named "test1.txt"
    touch test1.txt

7. Added line with text "first line in file" in "test1.txt".
    echo "first line in file" >> test1.txt

8. Push this file to your Gitlab repo.
    git push origin master

9. Append line with text "second line in file" in "test1.txt".
    echo "second line in file" >> test1.txt

10. Add file to the staging area.
    git add test1.txt

11. Check the status of the file in all staging area
    git status

12. Append line with text "Third line in file" in "test1.txt". (Note status of files across different areas).
    echo "third line in file" >> tes1.txt

13. Remove "test1.txt" from the staging area.
    git restore --staged test1.txt

14. Create commit with message "My First Commit"
    git add tes1.txt
    git commit -m "My First Commit"

15. Push commit to the remote repo 
    NOTE: checklist commits pushed to the remote
    git push origin master

16. Update message of last commit "My First Commit" to "My Second Commit" (without creating a new commit)
    git commit --amend

17. Push commit with the updated message to the remote repo
    git push --force origin master

18. Check the difference between the last and second last commits.
    The commit id of the lastest commit is changed

19. Revert the last commit and check the updated commit logs history.
    A new commit id is generated. And files change back to the previous commit.

20. Append line with text "Fourth line in file" in "test1.txt" and commit it.
    echo "Fourth line in test1.txt" >> test1.txt
    git add test1.txt
    git commit -m :"Third Commit"

21. Update the last commit such that the "test1.txt"  also contains "Fifth line in file" (without creating a new commit)
    echo "Fifth line in test1.txt" >> test1.txt
    git add test1.txt
    git commit --amend

22. Push the updated commits to the remote repository
    git push origin master

23. Append some content in "test1.txt" file
    echo "Adding some more content in test1.txt" >> test1.txt

24. Pull all the content from remote repository to local repository
    git pull origin master

25. Clone the remote repository to some other directory in your local system.
    cd Desktop/
    git clone https://gitlab.com/rahil_1407/i-am-a-git-noob.git